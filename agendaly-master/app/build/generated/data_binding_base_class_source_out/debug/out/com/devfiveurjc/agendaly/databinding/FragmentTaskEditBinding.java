// Generated by view binder compiler. Do not edit!
package com.devfiveurjc.agendaly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devfiveurjc.agendaly.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTaskEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout taskAddConstraintLayout;

  @NonNull
  public final TextView taskEditDate;

  @NonNull
  public final FloatingActionButton taskEditEditDateButton;

  @NonNull
  public final TextInputEditText taskEditEditDescription;

  @NonNull
  public final FloatingActionButton taskEditEditTimeButton;

  @NonNull
  public final TextInputEditText taskEditEditTitle;

  @NonNull
  public final MaterialButton taskEditSaveButton;

  @NonNull
  public final TextView taskEditTime;

  private FragmentTaskEditBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout taskAddConstraintLayout, @NonNull TextView taskEditDate,
      @NonNull FloatingActionButton taskEditEditDateButton,
      @NonNull TextInputEditText taskEditEditDescription,
      @NonNull FloatingActionButton taskEditEditTimeButton,
      @NonNull TextInputEditText taskEditEditTitle, @NonNull MaterialButton taskEditSaveButton,
      @NonNull TextView taskEditTime) {
    this.rootView = rootView;
    this.taskAddConstraintLayout = taskAddConstraintLayout;
    this.taskEditDate = taskEditDate;
    this.taskEditEditDateButton = taskEditEditDateButton;
    this.taskEditEditDescription = taskEditEditDescription;
    this.taskEditEditTimeButton = taskEditEditTimeButton;
    this.taskEditEditTitle = taskEditEditTitle;
    this.taskEditSaveButton = taskEditSaveButton;
    this.taskEditTime = taskEditTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTaskEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTaskEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_task_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTaskEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout taskAddConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.taskEditDate;
      TextView taskEditDate = ViewBindings.findChildViewById(rootView, id);
      if (taskEditDate == null) {
        break missingId;
      }

      id = R.id.taskEditEditDateButton;
      FloatingActionButton taskEditEditDateButton = ViewBindings.findChildViewById(rootView, id);
      if (taskEditEditDateButton == null) {
        break missingId;
      }

      id = R.id.taskEditEditDescription;
      TextInputEditText taskEditEditDescription = ViewBindings.findChildViewById(rootView, id);
      if (taskEditEditDescription == null) {
        break missingId;
      }

      id = R.id.taskEditEditTimeButton;
      FloatingActionButton taskEditEditTimeButton = ViewBindings.findChildViewById(rootView, id);
      if (taskEditEditTimeButton == null) {
        break missingId;
      }

      id = R.id.taskEditEditTitle;
      TextInputEditText taskEditEditTitle = ViewBindings.findChildViewById(rootView, id);
      if (taskEditEditTitle == null) {
        break missingId;
      }

      id = R.id.taskEditSaveButton;
      MaterialButton taskEditSaveButton = ViewBindings.findChildViewById(rootView, id);
      if (taskEditSaveButton == null) {
        break missingId;
      }

      id = R.id.taskEditTime;
      TextView taskEditTime = ViewBindings.findChildViewById(rootView, id);
      if (taskEditTime == null) {
        break missingId;
      }

      return new FragmentTaskEditBinding((ConstraintLayout) rootView, taskAddConstraintLayout,
          taskEditDate, taskEditEditDateButton, taskEditEditDescription, taskEditEditTimeButton,
          taskEditEditTitle, taskEditSaveButton, taskEditTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
