// Generated by view binder compiler. Do not edit!
package com.devfiveurjc.agendaly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devfiveurjc.agendaly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListElementBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout DateLinearLayout;

  @NonNull
  public final LinearLayout InfoLinearLayout;

  @NonNull
  public final CardView cv;

  @NonNull
  public final TextView dateTextView;

  @NonNull
  public final TextView dayTextView;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final CheckBox taskCheckBox;

  @NonNull
  public final TextView titleTextView;

  private ListElementBinding(@NonNull CardView rootView, @NonNull LinearLayout DateLinearLayout,
      @NonNull LinearLayout InfoLinearLayout, @NonNull CardView cv, @NonNull TextView dateTextView,
      @NonNull TextView dayTextView, @NonNull TextView descriptionTextView,
      @NonNull CheckBox taskCheckBox, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.DateLinearLayout = DateLinearLayout;
    this.InfoLinearLayout = InfoLinearLayout;
    this.cv = cv;
    this.dateTextView = dateTextView;
    this.dayTextView = dayTextView;
    this.descriptionTextView = descriptionTextView;
    this.taskCheckBox = taskCheckBox;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListElementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListElementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_element, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListElementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DateLinearLayout;
      LinearLayout DateLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (DateLinearLayout == null) {
        break missingId;
      }

      id = R.id.InfoLinearLayout;
      LinearLayout InfoLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (InfoLinearLayout == null) {
        break missingId;
      }

      CardView cv = (CardView) rootView;

      id = R.id.dateTextView;
      TextView dateTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTextView == null) {
        break missingId;
      }

      id = R.id.dayTextView;
      TextView dayTextView = ViewBindings.findChildViewById(rootView, id);
      if (dayTextView == null) {
        break missingId;
      }

      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.taskCheckBox;
      CheckBox taskCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (taskCheckBox == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ListElementBinding((CardView) rootView, DateLinearLayout, InfoLinearLayout, cv,
          dateTextView, dayTextView, descriptionTextView, taskCheckBox, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
