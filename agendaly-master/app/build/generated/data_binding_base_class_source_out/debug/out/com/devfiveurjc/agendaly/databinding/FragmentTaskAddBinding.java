// Generated by view binder compiler. Do not edit!
package com.devfiveurjc.agendaly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devfiveurjc.agendaly.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTaskAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout taskAddConstraintLayout;

  @NonNull
  public final TextView taskAddDate;

  @NonNull
  public final FloatingActionButton taskAddEditDateButton;

  @NonNull
  public final TextInputEditText taskAddEditDescription;

  @NonNull
  public final TextInputEditText taskAddEditImportance;

  @NonNull
  public final FloatingActionButton taskAddEditTimeButton;

  @NonNull
  public final TextInputEditText taskAddEditTitle;

  @NonNull
  public final MaterialButton taskAddSaveButton;

  @NonNull
  public final TextView taskAddTime;

  private FragmentTaskAddBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout taskAddConstraintLayout, @NonNull TextView taskAddDate,
      @NonNull FloatingActionButton taskAddEditDateButton,
      @NonNull TextInputEditText taskAddEditDescription,
      @NonNull TextInputEditText taskAddEditImportance,
      @NonNull FloatingActionButton taskAddEditTimeButton,
      @NonNull TextInputEditText taskAddEditTitle, @NonNull MaterialButton taskAddSaveButton,
      @NonNull TextView taskAddTime) {
    this.rootView = rootView;
    this.taskAddConstraintLayout = taskAddConstraintLayout;
    this.taskAddDate = taskAddDate;
    this.taskAddEditDateButton = taskAddEditDateButton;
    this.taskAddEditDescription = taskAddEditDescription;
    this.taskAddEditImportance = taskAddEditImportance;
    this.taskAddEditTimeButton = taskAddEditTimeButton;
    this.taskAddEditTitle = taskAddEditTitle;
    this.taskAddSaveButton = taskAddSaveButton;
    this.taskAddTime = taskAddTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTaskAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTaskAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_task_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTaskAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout taskAddConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.taskAddDate;
      TextView taskAddDate = ViewBindings.findChildViewById(rootView, id);
      if (taskAddDate == null) {
        break missingId;
      }

      id = R.id.taskAddEditDateButton;
      FloatingActionButton taskAddEditDateButton = ViewBindings.findChildViewById(rootView, id);
      if (taskAddEditDateButton == null) {
        break missingId;
      }

      id = R.id.taskAddEditDescription;
      TextInputEditText taskAddEditDescription = ViewBindings.findChildViewById(rootView, id);
      if (taskAddEditDescription == null) {
        break missingId;
      }

      id = R.id.taskAddEditImportance;
      TextInputEditText taskAddEditImportance = ViewBindings.findChildViewById(rootView, id);
      if (taskAddEditImportance == null) {
        break missingId;
      }

      id = R.id.taskAddEditTimeButton;
      FloatingActionButton taskAddEditTimeButton = ViewBindings.findChildViewById(rootView, id);
      if (taskAddEditTimeButton == null) {
        break missingId;
      }

      id = R.id.taskAddEditTitle;
      TextInputEditText taskAddEditTitle = ViewBindings.findChildViewById(rootView, id);
      if (taskAddEditTitle == null) {
        break missingId;
      }

      id = R.id.taskAddSaveButton;
      MaterialButton taskAddSaveButton = ViewBindings.findChildViewById(rootView, id);
      if (taskAddSaveButton == null) {
        break missingId;
      }

      id = R.id.taskAddTime;
      TextView taskAddTime = ViewBindings.findChildViewById(rootView, id);
      if (taskAddTime == null) {
        break missingId;
      }

      return new FragmentTaskAddBinding((ConstraintLayout) rootView, taskAddConstraintLayout,
          taskAddDate, taskAddEditDateButton, taskAddEditDescription, taskAddEditImportance,
          taskAddEditTimeButton, taskAddEditTitle, taskAddSaveButton, taskAddTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
