// Generated by view binder compiler. Do not edit!
package com.devfiveurjc.agendaly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devfiveurjc.agendaly.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTaskInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout taskInfoConstraintLayout;

  @NonNull
  public final TextView taskInfoDate;

  @NonNull
  public final MaterialButton taskInfoDeleteButton;

  @NonNull
  public final TextView taskInfoDescription;

  @NonNull
  public final MaterialButton taskInfoEditButton;

  @NonNull
  public final TextView taskInfoStatus;

  @NonNull
  public final TextView taskInfoTitle;

  private FragmentTaskInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout taskInfoConstraintLayout, @NonNull TextView taskInfoDate,
      @NonNull MaterialButton taskInfoDeleteButton, @NonNull TextView taskInfoDescription,
      @NonNull MaterialButton taskInfoEditButton, @NonNull TextView taskInfoStatus,
      @NonNull TextView taskInfoTitle) {
    this.rootView = rootView;
    this.taskInfoConstraintLayout = taskInfoConstraintLayout;
    this.taskInfoDate = taskInfoDate;
    this.taskInfoDeleteButton = taskInfoDeleteButton;
    this.taskInfoDescription = taskInfoDescription;
    this.taskInfoEditButton = taskInfoEditButton;
    this.taskInfoStatus = taskInfoStatus;
    this.taskInfoTitle = taskInfoTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTaskInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTaskInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_task_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTaskInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout taskInfoConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.taskInfoDate;
      TextView taskInfoDate = ViewBindings.findChildViewById(rootView, id);
      if (taskInfoDate == null) {
        break missingId;
      }

      id = R.id.taskInfoDeleteButton;
      MaterialButton taskInfoDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (taskInfoDeleteButton == null) {
        break missingId;
      }

      id = R.id.taskInfoDescription;
      TextView taskInfoDescription = ViewBindings.findChildViewById(rootView, id);
      if (taskInfoDescription == null) {
        break missingId;
      }

      id = R.id.taskInfoEditButton;
      MaterialButton taskInfoEditButton = ViewBindings.findChildViewById(rootView, id);
      if (taskInfoEditButton == null) {
        break missingId;
      }

      id = R.id.taskInfoStatus;
      TextView taskInfoStatus = ViewBindings.findChildViewById(rootView, id);
      if (taskInfoStatus == null) {
        break missingId;
      }

      id = R.id.taskInfoTitle;
      TextView taskInfoTitle = ViewBindings.findChildViewById(rootView, id);
      if (taskInfoTitle == null) {
        break missingId;
      }

      return new FragmentTaskInfoBinding((ConstraintLayout) rootView, taskInfoConstraintLayout,
          taskInfoDate, taskInfoDeleteButton, taskInfoDescription, taskInfoEditButton,
          taskInfoStatus, taskInfoTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
